key = [
    [59, 175, 241, 75, 215, 172, 163, 7, 229, 107, 150, 89, 125, 95, 38, 4, 193, 203, 84, 142, 140, 35, 159, 70, 127, 211, 106, 101, 84, 123, 118, 24, 102, 126, 3, 240, 48, 107, 174, 137, 243, 109, 122, 80, 156, 111, 80, 11, 71, 144, 19, 166, 40, 222, 120, 54, 125, 35, 26, 34, 184, 117, 31, 166, 126, 172, 67, 23, 207, 82, 204, 147, 70, 251, 164, 125, 226, 2, 211, 32, 85, 24, 183, 195, 97, 118, 163, 140, 217, 9, 212, 210, 200, 36, 67, 243, 145, 185, 63, 82],
    [127, 235, 59, 167, 200, 1, 77, 206, 129, 77, 219, 196, 64, 247, 229, 190, 125, 123, 2, 170, 130, 152, 31, 234, 45, 93, 38, 119, 48, 167, 103, 85, 148, 137, 56, 23, 59, 148, 241, 31, 117, 145, 95, 35, 205, 230, 34, 172, 215, 65, 115, 172, 247, 38, 93, 43, 153, 105, 93, 9, 123, 33, 31, 208, 193, 220, 13, 127, 223, 204, 112, 59, 153, 119, 196, 82, 19, 102, 45, 174, 210, 253, 66, 17, 96, 248, 8, 9, 76, 13, 251, 148, 141, 14, 75, 97, 69, 124, 155, 2],  
    [190, 198, 79, 104, 42, 228, 230, 100, 197, 40, 105, 3, 247, 203, 94, 93, 55, 37, 92, 10, 185, 79, 7, 75, 229, 196, 127, 241, 221, 105, 127, 3, 237, 198, 231, 55, 114, 30, 132, 203, 77, 116, 253, 197, 103, 66, 31, 110, 105, 4, 69, 245, 152, 96, 118, 110, 211, 156, 28, 2, 31, 218, 219, 241, 159, 18, 252, 86, 76, 24, 208, 125, 232, 129, 103, 77, 50, 16, 80, 202, 228, 86, 132, 80, 244, 85, 253, 96, 138, 234, 186, 203, 137, 156, 109, 33, 147, 170, 22, 233], 
    [182, 231, 203, 192, 77, 58, 156, 131, 87, 176, 211, 119, 134, 89, 231, 178, 29, 140, 165, 103, 201, 252, 59, 230, 170, 132, 113, 11, 128, 180, 140, 67, 88, 33, 74, 175, 190, 207, 39, 128, 57, 198, 76, 63, 23, 207, 170, 162, 25, 254, 131, 222, 213, 43, 175, 145, 190, 190, 56, 63, 72, 249, 103, 73, 5, 197, 187, 90, 33, 111, 207, 34, 231, 193, 9, 209, 169, 74, 204, 16, 200, 98, 203, 118, 197, 248, 87, 224, 26, 136, 253, 133, 53, 211, 22, 194, 17, 232, 79, 248],
    [241, 119, 28, 196, 147, 45, 97, 83, 5, 118, 113, 250, 198, 140, 55, 78, 34, 225, 193, 189, 102, 216, 65, 23, 42, 136, 2, 120, 68, 28, 65, 226, 213, 133, 22, 173, 253, 90, 43, 214, 220, 214, 85, 28, 31, 15, 207, 32, 116, 184, 129, 207, 243, 84, 156, 29, 51, 46, 115, 122, 6, 149, 88, 215, 106, 158, 238, 28, 126, 20, 137, 20, 224, 202, 19, 58, 189, 233, 28, 67, 102, 230, 252, 176, 249, 5, 30, 147, 54, 32, 73, 224, 215, 47, 234, 77, 146, 174, 186, 216],     
    [16, 9, 20, 201, 53, 237, 233, 167, 77, 61, 153, 67, 50, 200, 67, 160, 9, 108, 14, 179, 124, 231, 90, 217, 89, 122, 3, 76, 47, 178, 244, 173, 36, 210, 59, 82, 14, 92, 18, 73, 66, 69, 225, 50, 77, 186, 24, 71, 179, 77, 98, 194, 58, 240, 64, 51, 155, 6, 14, 1, 143, 177, 251, 121, 206, 249, 129, 1, 80, 218, 116, 241, 56, 47, 155, 241, 161, 187, 152, 10, 3, 60, 204, 42, 198, 254, 246, 33, 198, 152, 89, 155, 109, 193, 131, 192, 90, 111, 169, 111],
    [185, 220, 164, 103, 157, 126, 82, 16, 243, 156, 220, 144, 200, 22, 166, 215, 222, 22, 150, 107, 14, 173, 104, 104, 80, 161, 167, 101, 157, 32, 195, 87, 185, 192, 56, 144, 84, 126, 161, 8, 245, 124, 247, 238, 109, 191, 230, 96, 207, 221, 122, 59, 153, 59, 51, 103, 177, 147, 219, 126, 0, 250, 92, 71, 100, 163, 70, 13, 222, 0, 23, 147, 208, 110, 27, 197, 253, 230, 112, 234, 0, 68, 192, 131, 146, 9, 144, 239, 44, 32, 65, 244, 187, 142, 119, 232, 115, 150, 151, 189],
]

enc_flag = [238, 48, 133, 70, 156, 108, 122, 129, 65, 140, 50, 194, 10, 47, 102, 156, 199, 120, 219, 218, 41, 39, 228, 225, 72, 34, 98, 48, 47, 185, 11, 59, 141, 121, 158, 207, 105, 87, 66, 144, 152, 68, 62, 253, 191, 231, 110, 201, 7, 160, 60, 103, 42, 61, 154, 132, 146, 91, 228, 94, 12, 5, 231, 104, 134, 135, 106, 164, 72, 207, 83, 18, 165, 60, 171, 178, 17, 102, 242, 23, 58, 240, 253, 120, 187, 140, 167, 88, 216, 15, 29, 241, 115, 118, 15, 53, 160, 231, 201, 144]
MOD = 2 ** 8

with open('sage.txt', 'w') as f:
    s = "var('"
    s += ' '.join(f'p{i}' for i in range(6, 101))
    s += ' '
    s += ' '.join(f'p{i}' for i in range(1, 8))
    s += "')\n"
    f.write(s)

    for i in range(6, 101):
        f.write(f'assume(p{i} >= 0)\n')
        f.write(f'assume(p{i} < 256)\n')
        f.write(f"assume(p{i}, 'integer')\n")

    for i in range(1, 8):
        f.write(f"assume(k{i}, 'integer')\n")

    for eq in range(7):
        s = f'eq{eq + 1} = '
        s += ' + '.join(f'{a}*p{i + 1}' for i, a in enumerate(key[eq]))
        s += f' == {enc_flag[eq]} + 256 * k{eq + 1}'
        f.write(s)
        f.write('\n')

    s = 'solve(['
    s += ', '.join(f'eq{i}' for i in range(1, 8))
    s += ']), '
    s += ', '.join(f'p{i}' for i in range(6, 101))
    s += ')\n'
    f.write(s)
